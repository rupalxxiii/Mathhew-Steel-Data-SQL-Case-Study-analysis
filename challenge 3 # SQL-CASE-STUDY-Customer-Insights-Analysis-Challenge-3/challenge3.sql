create database challenge3;


use challenge3; 

CREATE TABLE country (
country_id INT PRIMARY KEY,
country_name VARCHAR(50),
head_office VARCHAR(50)
);
--------------------
INSERT INTO country (country_id, country_name, head_office)
VALUES (1, 'UK', 'London'),
(2, 'USA', 'New York'),
(3, 'China', 'Beijing');
--------------------
CREATE TABLE customers (
customer_id INT PRIMARY KEY,
first_shop DATE,
age INT,
rewards VARCHAR(50),
can_email VARCHAR(50)
);
--------------------
INSERT INTO customers (customer_id, first_shop, age, rewards, can_email)
VALUES (1, '2022-03-20', 23, 'yes', 'no'),
(2, '2022-03-25', 26, 'no', 'no'),
(3, '2022-04-06', 32, 'no', 'no'),
(4, '2022-04-13', 25, 'yes', 'yes'),
(5, '2022-04-22', 49, 'yes', 'yes'),
(6, '2022-06-18', 28, 'yes', 'no'),
(7, '2022-06-30', 36, 'no', 'no'),
(8, '2022-07-04', 37, 'yes', 'yes');
--------------------
CREATE TABLE orders (
order_id INT PRIMARY KEY,
customer_id INT,
date_shop DATE,
sales_channel VARCHAR(50),
country_id INT,
FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
FOREIGN KEY (country_id) REFERENCES country(country_id)
);
--------------------
INSERT INTO orders (order_id, customer_id, date_shop, sales_channel, country_id)
VALUES (1, 1, '2023-01-16', 'retail', 1),
(2, 4, '2023-01-20', 'retail', 1),
(3, 2, '2023-01-25', 'retail', 2),
(4, 3, '2023-01-25', 'online', 1),
(5, 1, '2023-01-28', 'retail', 3),
(6, 5, '2023-02-02', 'online', 1),
(7, 6, '2023-02-05', 'retail', 1),
(8, 3, '2023-02-11', 'online', 3);
--------------------
CREATE TABLE products (
product_id INT PRIMARY KEY,
category VARCHAR(50),
price NUMERIC(5,2)
);
--------------------
INSERT INTO products (product_id, category, price)
VALUES (1, 'food', 5.99),
(2, 'sports', 12.49),
(3, 'vitamins', 6.99),
(4, 'food', 0.89),
(5, 'vitamins', 15.99);
--------------------
CREATE TABLE baskets (
order_id INT,
product_id INT,
FOREIGN KEY (order_id) REFERENCES orders(order_id),
FOREIGN KEY (product_id) REFERENCES products(product_id)
);
--------------------
INSERT INTO baskets (order_id, product_id)
VALUES (1, 1),(1, 2),(1, 5),(2, 4),
(3, 3),(4, 2),(4, 1),(5, 3),
(5, 5),(6, 4),(6, 3),(6, 1),
(7, 2),(7, 1),(8, 3),(8, 3);


-- Customer Insights analysis

-- 1. WHAT ARE THE NAMES OF ALL THE COUNTRIES IN THE COUNTRY TABLE?

select country_name from Country;

-- 2. WHAT IS THE TOTAL NUMBER OF CUSTOMERS IN THE CUSTOMERS TABLE?

select count(customer_id) as total from customers;

-- 3. WHAT IS THE AVERAGE AGE OF CUSTOMERS WHO CAN RECEIVE MARKETING EMAILS (CAN_EMAIL IS SET TO 'YES')?

select ceil(avg(age)) as average_age
from customers where can_email = "yes" ;


-- 4. HOW MANY ORDERS WERE MADE BY CUSTOMERS AGED 30 OR OLDER?

select C.age, count(O.order_id) as total from
orders as O join customers as C on C.customer_id = O.customer_id
where C.age >= 30
group by c.age; 

-- 5. WHAT IS THE TOTAL REVENUE GENERATED BY EACH PRODUCT CATEGORY?

select category, round(sum(price)) as total_revenue
from products
join baskets using(product_id)
group  by product_id;

-- 6. WHAT IS THE AVERAGE PRICE OF PRODUCTS IN THE 'FOOD' CATEGORY?

select round(avg(price),2) as average_price 
from products where category = "Food";

-- 7. HOW MANY ORDERS WERE MADE IN EACH SALES CHANNEL (SALES_CHANNEL COLUMN) IN THE ORDERS TABLE?

select sales_channel, count(order_id) as total_order
from orders group by sales_channel;

-- 8.WHAT IS THE DATE OF THE LATEST ORDER MADE BY A CUSTOMER WHO CAN RECEIVE MARKETING EMAILS?
 
 select O.date_shop, C.can_email
 from orders as O join customers as C using(customer_id)
 where C.can_email = "yes"
 order by O.date_shop desc limit 1;
 

-- 9. WHAT IS THE NAME OF THE COUNTRY WITH THE HIGHEST NUMBER OF ORDERS?

select C.country_name, count(O.country_id) as total
from orders as O join country as C using(country_id)
group by C.country_name
order by total  desc limit 1;

-- 10. WHAT IS THE AVERAGE AGE OF CUSTOMERS WHO MADE ORDERS IN THE 'VITAMINS' PRODUCT CATEGORY?

select ceil(avg(age)) as average_age , P.category
from customers as C join orders as O using(customer_id)
join products as P where P.category ="vitamin";







                            -- T H E  E N D --
 ----------------------------------------------------------------------------------------------------------------------------------------------------                           